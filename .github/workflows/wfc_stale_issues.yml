on:
  workflow_call:
    inputs:
      hours:
        description: "The number of hours an issue has to be unmodified before being applied the labels"
        type: number
        default: 720
        required: false
      staleLabel:
        description: "A label to add when an issue is staled"
        type: string
        default: "triage/stale"
        required: false
      staleComment:
        type: string
        description: "A comment to add to the issue when marking as stale"
        default: |
          This issue was inactive for 30days it will be reviewed in the next triage meeting and might be closed.
          If you think this issue is still relevant please comment on it promptly or attend the next triage meeting.
        required: false
      autocloseLabels:
        description: "A comma separated list of labels that indicates an issue should be closed"
        type: string
        required: false
        default: "triage/rotten,triage/duplicated,triage/not-reproducible"
      autocloseComment:
        type: string
        description: "A comment to add to the issue when autoclosing"
        default: |
          Automatically closing the issue due to having one of the "closed state label".
        required: false

jobs:
  lifecycle:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: mark issues as stale
        run: |
          before=`date -d '${{ inputs.hours }} hours ago' --iso-8601`T12:00:00+00:00
          echo "Getting all issues untouched since: $before"
          issues=`gh issue list -S "-label:${{ inputs.staleLabel }} updated:<$before" -s open -R ${{ github.repository }} --json number -t '{{range .}}{{.number}} {{end}}'`
          echo "Updating `echo $issues | wc -w` issues"
          for issue in $issues; do
            gh issue edit $issue --add-label ${{ inputs.staleLabel }} -R ${{ github.repository }}
            gh issue comment $issue -R ${{ github.repository }} --body "$COMMENT"
          done
        env:
          COMMENT: ${{ inputs.staleComment }}
      - name: close issues marked with label
        run: |
          issues=`gh issue list -S "label:${{ inputs.autocloseLabels }}" -s open -R ${{ github.repository }} --json number -t '{{range .}}{{.number}} {{end}}'`
          echo "Auto closing issues `echo $issues | wc -w` issues"
          for issue in $issues; do
            gh issue comment $issue -R ${{ github.repository }} --body "$COMMENT"
            gh issue close $issue -R ${{ github.repository }}
          done
        env:
          COMMENT: ${{ inputs.autocloseComment }}
