on:
  workflow_call:
    inputs:
      label:
        description: "The label to use to indicate backport"
        type: string
        default: "backport"
        required: false
      branchFilePath:
        description: "A file that contains the list of active branches"
        type: string
        default: "active-branches.json"
        required: false
      gitUser:
        description: "The user to use for commit"
        type: string
        default: "kumahq[bot]"
        required: false
      gitEmail:
        description: "The user to use for commit"
        type: string
        default: "<110050114+kumahq[bot]@users.noreply.github.com>"
        required: false
    secrets:
      app_id:
        required: true
      private_key:
        required: true

jobs:
  build-matrix:
    if: (github.event.action == 'closed' || github.event.action == 'labeled' ) && github.event.pull_request.merged && contains(github.event.pull_request.labels.*.name, inputs.label)
    outputs:
      branches: ${{ steps.generate-matrix.outputs.branches }}
    runs-on: ubuntu-latest
    steps:
      - id: generate-matrix
        name: generate-matrix
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # The head -1 is because GITHUB_OUTPUT is easier to work with single line output and this file is created with automation in `lifecycle.yaml`
          TARGET_BRANCHES=$(gh api /repos/${{ github.repository }}/contents/${{ inputs.branchFilePath }} --jq '.content | @base64d' | jq  -cM '.[:index("${{ github.event.pull_request.base.ref }}")]')
          echo "branches=${TARGET_BRANCHES}" >> $GITHUB_OUTPUT
  open-prs:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: write  # for marocchino/sticky-pull-request-comment to create or update PR comment
    needs:
      - build-matrix
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.build-matrix.outputs.branches) }}
    runs-on: ubuntu-latest
    env:
      GH_USER: ${{ inputs.gitUser }}
      GH_EMAIL: ${{ inputs.gitEmail }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      SHA: ${{ github.event.pull_request.merge_commit_sha }}
      TARGET_BRANCH: ${{ matrix.branch }}
    steps:
      - uses: marocchino/sticky-pull-request-comment@efaaab3fd41a9c3de579aba759d2552635e590fd # v2.8.0
        with:
          append: true
          message: backporting to ${{ matrix.branch }} with [action](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - id: github-app-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.private_key }}
# uncomment to try without the github app
#        run: |
#          echo "token=${{ github.token }}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ env.TARGET_BRANCH }}
          fetch-depth: 0
      - name: git-config
        run: |
          git config user.name "${GH_USER}"
          git config user.email "${GH_EMAIL}"
      - name: cherry-pick
        run: |
          echo LABELS=${{ matrix.branch }} >> $GITHUB_ENV
          if git cherry-pick ${{ env.SHA }}; then
            echo "Cherry-picked without conflicts!"
          else
            echo LABELS=${{ matrix.branch }},conflict >> $GITHUB_ENV
            echo "DIFF<<EOF" >> $GITHUB_ENV
            echo ":warning: :warning: :warning: Conflicts happened when cherry-picking! :warning: :warning: :warning:" >> $GITHUB_ENV
            echo '```' >> $GITHUB_ENV
            git status >> $GITHUB_ENV
            echo '```' >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            git add .
            git cherry-pick --continue
          fi
      - uses: peter-evans/create-pull-request@a4f52f8033a6168103c2538976c07b467e8163bc # v6.0.1
        with:
          title: "${{ env.PR_TITLE }} (backport of #${{ env.PR_NUMBER }})"
          signoff: true
          branch: chore/backport-${{ env.TARGET_BRANCH }}-${{ env.PR_NUMBER }}
          body: |
            Automatic cherry-pick of #${{ env.PR_NUMBER }} for branch ${{ env.TARGET_BRANCH }}
            
            Generated by [action](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            cherry-picked commit ${{ env.SHA }}
            ${{ env.DIFF }}
          commit-message: |
            Automatic cherry-pick of PR ${{ env.PR_NUMBER }} for branch ${{ env.TARGET_BRANCH }}
            
            cherry-picked commit ${{ env.SHA }}
          delete-branch: true
          draft: false
          labels: ${{ env.LABELS }}
          token: ${{ steps.github-app-token.outputs.token }}
          committer: ${{ env.GH_USER }} ${{ env.GH_EMAIL }}
          author: ${{ env.GH_USER }} ${{ env.GH_EMAIL }}
